[{"/Users/jlawanson/Desktop/techbound/website/src/index.js":"1","/Users/jlawanson/Desktop/techbound/website/src/reportWebVitals.js":"2","/Users/jlawanson/Desktop/techbound/website/src/App.js":"3","/Users/jlawanson/Desktop/techbound/website/src/components/file-upload.component.js":"4","/Users/jlawanson/Desktop/techbound/website/src/components/sign-up.component.js":"5","/Users/jlawanson/Desktop/techbound/website/src/components/header.component.js":"6","/Users/jlawanson/Desktop/techbound/website/src/components/cluster-cards.component.js":"7","/Users/jlawanson/Desktop/techbound/website/src/components/landing-page.component.js":"8","/Users/jlawanson/Desktop/techbound/website/src/components/browsing-list.component.js":"9","/Users/jlawanson/Desktop/techbound/website/src/components/file-save-2.component.js":"10","/Users/jlawanson/Desktop/techbound/website/src/components/login.component.js":"11","/Users/jlawanson/Desktop/techbound/website/src/components/logout.component.js":"12","/Users/jlawanson/Desktop/techbound/website/src/components/profile.component.js":"13","/Users/jlawanson/Desktop/techbound/website/src/sessions.ts":"14","/Users/jlawanson/Desktop/techbound/website/src/components/basics.component.js":"15","/Users/jlawanson/Desktop/techbound/website/src/components/more-deets.component.js":"16","/Users/jlawanson/Desktop/techbound/website/src/components/choose-clusters.component.js":"17","/Users/jlawanson/Desktop/techbound/website/src/components/cluster-list.component.js":"18","/Users/jlawanson/Desktop/techbound/website/src/s3.js":"19","/Users/jlawanson/Desktop/techbound/website/src/components/internship-listings.component.js":"20"},{"size":500,"mtime":1603829610565,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1603829610566,"results":"23","hashOfConfig":"22"},{"size":1867,"mtime":1609295050123,"results":"24","hashOfConfig":"22"},{"size":3821,"mtime":1604614667239,"results":"25","hashOfConfig":"22"},{"size":1198,"mtime":1607383190313,"results":"26","hashOfConfig":"22"},{"size":1155,"mtime":1604614595722,"results":"27","hashOfConfig":"22"},{"size":649,"mtime":1604446113032,"results":"28","hashOfConfig":"22"},{"size":1428,"mtime":1606778989196,"results":"29","hashOfConfig":"22"},{"size":1206,"mtime":1606159764070,"results":"30","hashOfConfig":"22"},{"size":1506,"mtime":1609287018568,"results":"31","hashOfConfig":"22"},{"size":921,"mtime":1609287018568,"results":"32","hashOfConfig":"22"},{"size":214,"mtime":1609287018568,"results":"33","hashOfConfig":"22"},{"size":6733,"mtime":1607411542871,"results":"34","hashOfConfig":"22"},{"size":551,"mtime":1609287018569,"results":"35","hashOfConfig":"22"},{"size":1077,"mtime":1609287018567,"results":"36","hashOfConfig":"22"},{"size":3138,"mtime":1607410296198,"results":"37","hashOfConfig":"22"},{"size":2953,"mtime":1609287018568,"results":"38","hashOfConfig":"22"},{"size":3612,"mtime":1607400494915,"results":"39","hashOfConfig":"22"},{"size":1045,"mtime":1607384394989,"results":"40","hashOfConfig":"22"},{"size":2148,"mtime":1609292722174,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5eb020",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jlawanson/Desktop/techbound/website/src/index.js",[],["95","96"],"/Users/jlawanson/Desktop/techbound/website/src/reportWebVitals.js",[],"/Users/jlawanson/Desktop/techbound/website/src/App.js",["97","98","99","100","101","102","103","104","105","106","107"],"/Users/jlawanson/Desktop/techbound/website/src/components/file-upload.component.js",["108","109"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default class UploadFile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      loaded: 0,\n    };\n  }\n  checkMimeType = (event) => {\n    //getting file object\n    let files = event.target.files;\n    //define message container\n    let err = [];\n    // list allow mime type\n    const types = [\"image/png\", \"image/jpeg\", \"application/pdf\"];\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n      // compare file type find doesn't matach\n      if (types.every((type) => files[x].type !== type)) {\n        // create error message and assign to container\n        err[x] = files[x].type + \" is not a supported format\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  maxSelectFile = (event) => {\n    let files = event.target.files;\n    if (files.length > 3) {\n      const msg = \"Only 3 images can be uploaded at a time\";\n      event.target.value = null;\n      toast.warn(msg);\n      return false;\n    }\n    return true;\n  };\n  checkFileSize = (event) => {\n    let files = event.target.files;\n    let size = 100000000;\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n      if (files[x].size > size) {\n        err[x] = files[x].type + \" is too large, please pick a smaller file\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  onChangeHandler = (event) => {\n    var files = event.target.files;\n    console.log(files);\n    if (\n      this.maxSelectFile(event) &&\n      this.checkMimeType(event) &&\n      this.checkFileSize(event)\n    ) {\n      // if return true allow to setState\n      console.log(\"file changed!\");\n      this.setState({\n        selectedFile: files,\n        loaded: 0,\n      });\n    }\n  };\n  onClickHandler = () => {\n    const data = new FormData();\n    var inputFile = this.state.selectedFile[0];\n    axios\n      .post(\"http://localhost:5000/file/upload\", inputFile, {\n        onUploadProgress: (ProgressEvent) => {\n          this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\n          });\n        },\n      })\n      .then((res) => {\n        // then print response status\n        toast.success(\"upload success\");\n      })\n      .catch((err) => {\n        // then print response status\n        toast.error(\"upload fail\");\n      });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"offset-md-3 col-md-6\">\n            <div className=\"form-group files\">\n              <label>Upload Your File </label>\n              <input\n                type=\"file\"\n                className=\"form-control\"\n                multiple\n                onChange={this.onChangeHandler}\n              />\n            </div>\n            <div className=\"form-group\">\n              <ToastContainer draggable={true} />\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded}>\n                {Math.round(this.state.loaded, 2)}%\n              </Progress>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-success btn-block\"\n              onClick={this.onClickHandler}\n            >\n              Upload\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/jlawanson/Desktop/techbound/website/src/components/sign-up.component.js",[],"/Users/jlawanson/Desktop/techbound/website/src/components/header.component.js",["110"],"import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <Navbar\n            collapseOnSelect\n            fixed=\"top\"\n            sticky=\"top\"\n            expand=\"lg\"\n            bg=\"dark\"\n            variant=\"dark\"\n          >\n            <Navbar.Brand href=\"/\">TECHBOUND</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav\n                variant=\"pills\"\n                className=\"ml-auto\"\n                defaultActiveKey=\"#memes\"\n              >\n                <Nav.Link href=\"#internships\">View Internships</Nav.Link>\n                <Nav.Link href=\"#deets\">Log In</Nav.Link>\n                <Button variant=\"info\" href=\"sign-up\">Tailor Your Resume</Button>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/jlawanson/Desktop/techbound/website/src/components/cluster-cards.component.js",["111"],"import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../Box.css\";\nconst cardInfo = [\n  { title: \"Hi\", text: \"boop\" },\n  { title: \"Hello\", text: \"beep\" },\n  { title: \"Dog\", text: \"bop\" },\n];\n\nconst renderCard = (card, index) => {\n  return (\n    <Card key={index} className=\"box\">\n      <Card.Body>\n        <Card.Title>{card.title}</Card.Title>\n        <Card.Text>{card.text}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default class ClusterCards extends Component {\n  render() {\n    return <div className=\"grid\">{cardInfo.map(renderCard)}</div>;\n  }\n}\n","/Users/jlawanson/Desktop/techbound/website/src/components/landing-page.component.js",["112","113","114"],"import React, { useState, useEffect } from \"react\";\nimport { init } from \"ityped\"\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ClusterList, { cardInfo } from \"./cluster-list.component\";\n\nfunction Landing(props) {\n    const clusterTitles = cardInfo.map(cluster => cluster.title.toLowerCase())\n   \n    useEffect(() => {\n        const myElement = document.querySelector('#myElement')\n        init(myElement, { showCursor: false, strings: clusterTitles, loop: true })\n    }, [])\n    \n    // const [clusters, setClusters] = useState([])\n\n    // useEffect(() => {\n    //     axios\n    //     .get(\"http://localhost:5000/clusters/\")\n    //     .then(response => setClusters(response.data))\n    //     .catch(error => console.log(error));\n    // }, [])\n\n    return (\n        <div>\n            <div>\n                Start growing your career in tech by looking in the areas you're most passionate about.\n            </div>\n            <br />\n            <div>\n                Find a tech internship in {\" \"}\n                <span id=\"myElement\"></span>\n            </div>\n            <br />\n            <div>\n                Explore Internships Based on Mission Cluster\n            </div>\n            <ClusterList />\n            <br />\n            <div>\n                TechBound can help you customize your resume to company mission.\n            </div>\n        </div>\n    )\n}\n\nexport default Landing;","/Users/jlawanson/Desktop/techbound/website/src/components/browsing-list.component.js",["115","116","117","118","119","120","121"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Sidebar from \"react-sidebar\";\nimport axios from \"axios\";\nimport parse from \"html-react-parser\";\n\nfunction BrowsingList() {\n  const [open, setOpen] = useState(false);\n  const [internships, setInternships] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log(location.pathname);\n    console.log(location.state.internships);\n    setInternships(location.state.internships);\n  });\n\n  function clusterList() {\n    return <p>Hello</p>;\n  }\n  return (\n    <div>\n      <h3>Explore Internships Based on Mission Cluster</h3>\n      <div>\n        {internships &&\n          internships.map((internship, index) => {\n            const title = internship.title;\n\n            var htmlDescription = internship.description;\n            var reactDescription = parse(htmlDescription);\n\n            return (\n              <div className=\"internship\">\n                <h4>{title}</h4>\n                {reactDescription}\n                <br></br>\n              </div>\n            );\n          })}\n      </div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default BrowsingList;\n","/Users/jlawanson/Desktop/techbound/website/src/components/file-save-2.component.js",["122","123","124","125","126","127","128"],"import ReactDom from \"react-dom\";\nimport ReactS3 from \"react-s3\";\nimport S3FileUpload from \"react-s3\";\nimport { uploadImage } from \"../s3\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useCallback } from \"react\";\n\nfunction FileSave() {\n  const [preview, setPreview] = useState(null);\n  const [file, setFile] = useState(null);\n  const onDrop = useCallback((acceptedFiles) => {}, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (acceptedFiles) => {\n      setFile(acceptedFiles[0]);\n    },\n  });\n\n  const onImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setPreview(window.URL.createObjectURL(file));\n      setFile(file);\n    }\n  };\n\n  const onSubmit = () => {\n    console.log(\"Submitting\");\n    if (file) {\n      uploadImage(file)\n        .then((url) => {\n          console.log(\"post action\");\n          console.log(file);\n        })\n        .catch((error) => {\n          console.log(\"error\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h3> File Upload </h3>\n      </div>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p> Drag 'n' drop some files here, or click to select files</p>\n        )}\n      </div>\n      <button onClick={onSubmit}></button>\n    </div>\n  );\n}\n\nexport default FileSave;\n","/Users/jlawanson/Desktop/techbound/website/src/components/login.component.js",["129","130"],"import React, { useState } from \"react\";\nimport { setSessionCookie } from \"../sessions\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    console.log(\"submitting\");\n    e.preventDefault();\n    setLoading(true);\n    // NOTE request to api login here instead of this fake promise\n    //await new Promise(r => setTimeout(r(), 1000));\n    setSessionCookie(e.target.value);\n    setLoading(false);\n  };\n\n  const actionSetEmail = (event) => {\n      setEmail(event.target.value);\n  }\n\n  if (loading) {\n    return <h4>Logging in...</h4>;\n  }\n\n  return (\n    <div style={{ marginTop: \"1rem\" }}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Enter email address\"\n        />\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","/Users/jlawanson/Desktop/techbound/website/src/components/logout.component.js",["131"],"import React from \"react\";\nimport Cookies from \"js-cookie\";\nimport { useEffect } from \"react\";\n\nconst Logout = () => {\n    Cookies.remove(\"session\");\n    return <div>Logging out!</div>;\n  };\n\nexport default Logout;","/Users/jlawanson/Desktop/techbound/website/src/components/profile.component.js",["132","133"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hooks-helper\";\nimport axios from \"axios\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from \"react-bootstrap/esm/Card\";\n\nconst Profile = props => {\n    const sampleUser = {\n        firstname: \"Johnny\",\n        lastname: \"Appleseed\",\n        email: \"johnny@college.edu\",\n        password: \"johnny\",\n        confirmation: \"johnny\",\n        resume: \"filename.png\",\n        linkedin: \"www.linkedin.com/in/johnnyappleseed\",\n        github: \"www.github.com/johnny\",\n        clusters: [\n            {\n                title: \"Employment services\",\n                subtitle: \"Enable employment services\",\n                text: \"\",\n                selected: false\n            },\n            {\n                title: \"Leisure & recreation\",\n                subtitle: \"Enable leisure and recreation\",\n                text: \"\",\n                selected: false\n            },\n            {\n                title: \"Social & community platforms\",\n                subtitle: \"Develop social and community platforms\",\n                text: \"\",\n                selected: false\n            }\n        ],\n    };\n\n    const [user, setUser] = useState(sampleUser);\n    const [editMode, setEditMode] = useState(false);\n    const [formData, setForm] = useForm(user);\n\n    // useEffect(() => {\n    //     axios\n    //     .get(\"http://localhost:5000/users/:id\")\n    //     .then(response => setUser(response.data))\n    //     .catch(error => console.log(error));\n    // }, [])\n\n    const updateProfile = () => {\n        setUser(formData);\n        setEditMode(false);\n    }\n\n    switch(editMode){\n        case true:\n            return (\n                <div>\n                    <div>\n                        <h3>Profile{\" \"}\n                            <Button variant=\"primary\" style={{display: \"inline-block\"}} onClick={updateProfile}>Update</Button>\n                        </h3>\n                    </div>\n                    <Form>\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col>\n                                            <h6>First Name</h6>\n                                            <Form.Control type=\"text\" name=\"firstname\" value={formData.firstname} onChange={setForm} /><br />\n                                        </Col>\n                                        <Col>\n                                            <h6>Last Name</h6>\n                                            <Form.Control type=\"text\" name=\"lastname\" value={formData.lastname} onChange={setForm} /><br />\n                                        </Col>\n                                    </Row>\n                                    <h6>Email</h6>\n                                    <Form.Control type=\"text\" name=\"email\" value={formData.email} onChange={setForm} /><br />\n                                    <Row>\n                                        <Col>\n                                            <h6>Password</h6>\n                                            <Form.Control type=\"password\" name=\"password\" value={formData.password} onChange={setForm} /><br />\n                                        </Col>\n                                        <Col>\n                                            <h6>Confirm Password</h6>\n                                            <Form.Control type=\"password\" name=\"confirmation\" value={formData.confirmation} onChange={setForm} /><br />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col>\n                                    <h6>Resume</h6>\n                                    <Form.Control type=\"text\" name=\"resume\" value={formData.resume} onChange={setForm} /><br />\n                                    <h6>LinkedIn</h6>\n                                    <Form.Control type=\"text\" name=\"linkedin\" value={formData.linkedin} onChange={setForm} /><br />\n                                    <h6>GitHub</h6>\n                                    <Form.Control type=\"text\" name=\"github\" value={formData.github} onChange={setForm} /><br />\n                                </Col>\n                            </Row>\n                            <h6>Clusters</h6>\n\n                        </Container>\n                    </Form>\n                </div>\n            );\n        default:\n            return (\n                <div>\n                    <div>\n                        <h3>Profile{\" \"}\n                            <Button variant=\"primary\" style={{display: \"inline-block\"}} onClick={() => setEditMode(true)}>Edit</Button>\n                        </h3>\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col>\n                                        <h6>First Name</h6>\n                                        {user.firstname}<br /><br />\n                                    </Col>\n                                    <Col>\n                                        <h6>Last Name</h6>\n                                        {user.lastname}<br /><br />\n                                    </Col>\n                                </Row>\n                                <h6>Email</h6>\n                                {user.email}<br /><br />\n                                <h6>Password</h6>\n                                {'*'.repeat(user.password.length)}<br /><br />\n                            </Col>\n                            <Col>\n                                <h6>Resume</h6>\n                                {user.resume}<br /><br />\n                                <h6>LinkedIn</h6>\n                                <a href={user.linkedin}>{user.linkedin}</a><br /><br />\n                                <h6>GitHub</h6>\n                                <a href={user.github}>{user.github}</a><br /><br />\n                            </Col>\n                            <Col>\n                                <h6>Clusters</h6>\n                                {user.clusters.map(c => <div><Card body>{c.title}</Card><br /></div>)}\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            );\n    };\n\n    \n};\n\nexport default Profile;","/Users/jlawanson/Desktop/techbound/website/src/sessions.ts",["134","135"],"import React from 'react';\nimport * as Cookies from \"js-cookie\";\n\nexport const setSessionCookie = (session: any): void => {\n  console.log(\"SETTING SESSION HERE\")\n  Cookies.remove(\"session\");\n  Cookies.set(\"session\", session, { expires: 14 });\n};\n\nexport const getSessionCookie: any = () => {\n  const sessionCookie = Cookies.get(\"session\");\n  if (sessionCookie == \"undefined\" || sessionCookie == undefined) {\n    return {};\n  } else {\n    return JSON.parse(sessionCookie);\n  }\n};\n\nexport const SessionContext = React.createContext(getSessionCookie());\n",["136","137"],"/Users/jlawanson/Desktop/techbound/website/src/components/basics.component.js",[],"/Users/jlawanson/Desktop/techbound/website/src/components/more-deets.component.js",[],"/Users/jlawanson/Desktop/techbound/website/src/components/choose-clusters.component.js",[],"/Users/jlawanson/Desktop/techbound/website/src/components/cluster-list.component.js",["138","139"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nconst cardInfo = [\n  {\n    title: \"Transportation\",\n    subtitle: \"Revolutionize transportation\",\n    text: \"\",\n    selected: false\n  },\n  { title: \"Healthcare\", subtitle: \"Advance healthcare\", text: \"\",\n    selected: false },\n  { title: \"Education\", subtitle: \"Reimagine education\", text: \"\",\n    selected: false },\n  {\n    title: \"Advertising\",\n    subtitle: \"Empower businesses through advertising\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Real estate & property management\",\n    subtitle: \"Reimagine real estate and property management\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Financial technology\",\n    subtitle: \"Empower individuals and businesses financially\",\n    text: \"\",\n    selected: false\n  },\n  { title: \"Biotechnology\", subtitle: \"Advance biotech solutions\", text: \"\",\n    selected: false },\n  {\n    title: \"Data and analytics\",\n    subtitle: \"Empower individuals and businesses with data and analytics\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Supply chains & delivery\",\n    subtitle: \"Reimagine supply chains and delivery\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Satellite data capture\",\n    subtitle: \"Enable satellite data capture\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Technology\",\n    subtitle: \"Develop more accessible and efficient technology\",\n    text: \"\",\n    selected: false\n  },\n  { title: \"Child care\", subtitle: \"Revolutionize child care\", text: \"\",\n    selected: false },\n  {\n    title: \"Music & entertainment\",\n    subtitle: \"Provide music and video entertainment\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Employment services\",\n    subtitle: \"Enable employment services\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Leisure & recreation\",\n    subtitle: \"Enable leisure and recreation\",\n    text: \"\",\n    selected: false\n  },\n  {\n    title: \"Social & community platforms\",\n    subtitle: \"Develop social and community platforms\",\n    text: \"\",\n    selected: false\n  },\n];\n\nfunction enlargen(e) {\n  e.target.style.width = \"110%\";\n}\n\nfunction shrink(e) {\n  e.target.style.width = \"90%\";\n}\nfunction ClusterList() {\n  const [clusters, setClusters] = useState([]);\n  let history = useHistory();\n\n  const handleClick = async (clusterName) => {\n    console.log(\"function\");\n\n    const apiURL =\n      \"https://jobs.github.com/positions.json?description=\" + clusterName;\n    const response = await axios.get(apiURL);\n    history.push({\n      pathname: \"/browse/\" + clusterName,\n      state: { internships: response.data },\n    });\n  };\n\n  const renderCard = (card, index) => {\n    return (\n      <Card\n        onMouseLeave={shrink}\n        onMouseOver={enlargen}\n        key={index}\n        className=\"box transition\"\n        onClick={() => handleClick(card.subtitle)}\n      >\n        <Card.Body>\n          <Card.Title>{card.title}</Card.Title>\n          <Card.Text>{card.subtitle}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/clusters/\")\n      .then((response) => {\n        setClusters(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  });\n\n  return (\n    <div>\n      <h3>Explore Internships Based on Mission Cluster</h3>\n      <div className=\"grid\">{cardInfo.map(renderCard)}</div>\n    </div>\n  );\n}\n\nexport { cardInfo };\nexport default ClusterList;\n","/Users/jlawanson/Desktop/techbound/website/src/s3.js",[],"/Users/jlawanson/Desktop/techbound/website/src/components/internship-listings.component.js",["140","141","142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":27},{"ruleId":"148","severity":1,"message":"152","line":1,"column":29,"nodeType":"150","messageId":"151","endLine":1,"endColumn":37},{"ruleId":"148","severity":1,"message":"153","line":1,"column":39,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"148","severity":1,"message":"154","line":3,"column":50,"nodeType":"150","messageId":"151","endLine":3,"endColumn":54},{"ruleId":"148","severity":1,"message":"155","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":30},{"ruleId":"148","severity":1,"message":"156","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":20},{"ruleId":"148","severity":1,"message":"157","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":24},{"ruleId":"148","severity":1,"message":"158","line":16,"column":26,"nodeType":"150","messageId":"151","endLine":16,"endColumn":42},{"ruleId":"148","severity":1,"message":"159","line":16,"column":44,"nodeType":"150","messageId":"151","endLine":16,"endColumn":60},{"ruleId":"148","severity":1,"message":"160","line":17,"column":13,"nodeType":"150","messageId":"151","endLine":17,"endColumn":20},{"ruleId":"148","severity":1,"message":"161","line":18,"column":10,"nodeType":"150","messageId":"151","endLine":18,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":25,"column":23,"nodeType":"164","messageId":"165","endLine":25,"endColumn":55},{"ruleId":"148","severity":1,"message":"166","line":82,"column":11,"nodeType":"150","messageId":"151","endLine":82,"endColumn":15},{"ruleId":"148","severity":1,"message":"167","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":18},{"ruleId":"148","severity":1,"message":"161","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"152","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"168","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":13,"column":8,"nodeType":"171","endLine":13,"endColumn":10,"suggestions":"172"},{"ruleId":"148","severity":1,"message":"173","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"174","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":15},{"ruleId":"148","severity":1,"message":"168","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":13},{"ruleId":"148","severity":1,"message":"175","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":14},{"ruleId":"148","severity":1,"message":"176","line":8,"column":16,"nodeType":"150","messageId":"151","endLine":8,"endColumn":23},{"ruleId":"169","severity":1,"message":"177","line":12,"column":3,"nodeType":"150","endLine":12,"endColumn":12,"suggestions":"178"},{"ruleId":"148","severity":1,"message":"179","line":18,"column":12,"nodeType":"150","messageId":"151","endLine":18,"endColumn":23},{"ruleId":"148","severity":1,"message":"180","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":16},{"ruleId":"148","severity":1,"message":"181","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":15},{"ruleId":"148","severity":1,"message":"182","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":20},{"ruleId":"148","severity":1,"message":"168","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":13},{"ruleId":"148","severity":1,"message":"183","line":11,"column":10,"nodeType":"150","messageId":"151","endLine":11,"endColumn":17},{"ruleId":"148","severity":1,"message":"184","line":13,"column":9,"nodeType":"150","messageId":"151","endLine":13,"endColumn":15},{"ruleId":"148","severity":1,"message":"185","line":20,"column":9,"nodeType":"150","messageId":"151","endLine":20,"endColumn":22},{"ruleId":"148","severity":1,"message":"186","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":15},{"ruleId":"148","severity":1,"message":"187","line":17,"column":9,"nodeType":"150","messageId":"151","endLine":17,"endColumn":23},{"ruleId":"148","severity":1,"message":"153","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":19},{"ruleId":"148","severity":1,"message":"153","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"168","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":12,"column":21,"nodeType":"190","messageId":"191","endLine":12,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":12,"column":53,"nodeType":"190","messageId":"191","endLine":12,"endColumn":55},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"161","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"192","line":98,"column":10,"nodeType":"150","messageId":"151","endLine":98,"endColumn":18},{"ruleId":"148","severity":1,"message":"193","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":12},{"ruleId":"148","severity":1,"message":"168","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":13},{"ruleId":"148","severity":1,"message":"194","line":11,"column":21,"nodeType":"150","messageId":"151","endLine":11,"endColumn":31},{"ruleId":"148","severity":1,"message":"195","line":14,"column":25,"nodeType":"150","messageId":"151","endLine":14,"endColumn":39},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'createBrowserHistory' is defined but never used.","'ClusterCards' is defined but never used.","'SessionContext' is defined but never used.","'getSessionCookie' is defined but never used.","'setSessionCookie' is defined but never used.","'Cookies' is defined but never used.","'Button' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'x'.","ArrowFunctionExpression","unsafeRefs","'data' is assigned a value but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clusterTitles'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'useHistory' is defined but never used.","'Sidebar' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect contains a call to 'setInternships'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.pathname, location.state.internships] as a second argument to the useEffect Hook.",["199"],"'clusterList' is defined but never used.","'ReactDom' is defined but never used.","'ReactS3' is defined but never used.","'S3FileUpload' is defined but never used.","'preview' is assigned a value but never used.","'onDrop' is assigned a value but never used.","'onImageUpload' is assigned a value but never used.","'email' is assigned a value but never used.","'actionSetEmail' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'clusters' is assigned a value but never used.","'Card' is defined but never used.","'setCluster' is assigned a value but never used.","'setInternships' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [clusterTitles]",{"range":"204","text":"205"},"Add dependencies array: [location.pathname, location.state.internships]",{"range":"206","text":"207"},[507,509],"[clusterTitles]",[528,528],", [location.pathname, location.state.internships]"]